# based on: https://github.com/SaltyQuetzals/TAMU-Grade-Distribution-CSVs/blob/master/.github/workflows/release.yml

on: 
  push:
    branches:
      - master

name: Create Release

jobs:
  prep:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      npmtag: ${{ steps.timestamp.outputs.npmtag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Get current date and timestamp
        id: timestamp
        run: | 
          echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H%M%S')"
          echo "::set-output name=timestamptag::$(date +'%Y-%m-%d-%H%M%S')"
          echo "::set-output name=npmtag::$(date +'%Y%m%d%H%M%S')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "${{ steps.timestamp.outputs.timestamptag }}"
          #release_name: "publicdata-bundle-${{ steps.makebundle.outputs.tarname }}"
          draft: false
          prerelease: false
  
  build_test_1:
    name: Make test bundle (Summer 2020)
    runs-on: ubuntu-latest
    needs: [ prep ]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Make test bundle (Summer 2020)
        id: maketestbundle202002
        run: |
          pip install -r bundler/requirements.txt
          mkdir -p exports/
          VAR=$PWD/exports/publicdata-testbundle-summer2020.tar.gz
          python bundler/bundle.py -o "$VAR" --testbundle "*2020-02*.csv"
          echo "::set-output name=tarloc::$VAR"
          echo "::set-output name=tarname::$(basename $VAR)"
      - name: Upload Release Asset (Test Bundle Summer 2020)
        id: upload-release-asset-testbundle202002
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prep.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "${{ steps.maketestbundle202002.outputs.tarloc }}"
          asset_name: "${{ steps.maketestbundle202002.outputs.tarname }}"
          asset_content_type: application/gzip

  build_test_2:
    name: Make test bundle (2021 year)
    runs-on: ubuntu-latest
    needs: [ prep ]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Make test bundle (2021 year)
        id: maketestbundle2021
        run: |
          pip install -r bundler/requirements.txt
          mkdir -p exports/
          VAR=$PWD/exports/publicdata-testbundle-year2021.tar.gz
          python bundler/bundle.py -o "$VAR" --testbundle "*2021*.csv"
          echo "::set-output name=tarloc::$VAR"
          echo "::set-output name=tarname::$(basename $VAR)"
      - name: Upload Release Asset (Test Bundle 2021 Year)
        id: upload-release-asset-testbundle2021
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prep.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "${{ steps.maketestbundle2021.outputs.tarloc }}"
          asset_name: "${{ steps.maketestbundle2021.outputs.tarname }}"
          asset_content_type: application/gzip

  build_full:
    name: Make full bundle + Publish
    runs-on: ubuntu-latest
    needs: [ prep ]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: 'Set up Python'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Make bundle
        id: makebundle
        run: |
          pip install -r bundler/requirements.txt
          mkdir -p exports/
          VAR=$PWD/exports/publicdata-bundle.tar.gz
          ALT=$PWD/npm/bundle
          VAR_TEMP=$(dirname $VAR)/$(basename $VAR .gz)
          python bundler/bundle.py --skiprmtree -o "$VAR"
          mv $VAR_TEMP/* $ALT
          echo "::set-output name=tarloc::$VAR"
          echo "::set-output name=tarname::$(basename $VAR)"
      - name: Upload Release Asset
        id: upload-release-asset-full
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prep.outputs.release_upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "${{ steps.makebundle.outputs.tarloc }}"
          asset_name: "${{ steps.makebundle.outputs.tarname }}"
          asset_content_type: application/gzip
      # Publish to npm
      - uses: actions/setup-node@v2
        with:
          node-version: '15.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          cd npm
          node repackage.js ${{ needs.prep.outputs.npmtag }}
          npm publish --access public
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v2
        with:
          node-version: '15.x'
          registry-url: 'https://npm.pkg.github.com'
      # Publish to GitHub Packages
      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd npm
          node repackage.js ${{ needs.prep.outputs.npmtag }}
          npm publish
        